---
import type { ImageProps } from '../../content/config.ts';

import { Image } from 'astro:assets';

import BlogNav from '../BlogNav/index.astro';

import './styles.css';

import avatar from '../../assets/images/me.jpg';

interface Props {
	url: string,
	title: string,
	summary: string,
	createdAt: Date,
	updatedAt?: Date,
	image?: ImageProps,
	imageAlt?: string
}

const { url, title, summary, createdAt, updatedAt, image, imageAlt } = Astro.props;

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long' });
---
<div id="post-header">
	<BlogNav />
	<header>
		{image && (
			<Image
				itemprop="image"
				id="hero-image"
				src={image}
				alt={imageAlt ?? ''}
				itemprop="image"
				loading="eager"
			/>
		)}

		<div>
			<h1 class="p-name" itemprop="headline">{title}</h1>

			<div class="visually-hidden" hidden>
				<a class="u-uid u-url" href={url}>{title}</a>
				<p class="p-summary" itemprop="description">{summary}</p>
				<span itemprop="author" itemscope itemtype="https://schema.org/Person">
					<a class="p-author h-card" rel="author" itemprop="url" href={Astro.site}>
						<Image class="u-photo" itemprop="image" src={avatar} alt="Marco Campos" loading="lazy" />
						<span itemprop="name">Marco Campos</span>
					</a>
				</span>
			</div>

			<aside>
				Published on <time itemprop="datePublished" class="dt-published" datetime={createdAt.toISOString()}>{formatter.format(createdAt)}</time>
			</aside>
			{ updatedAt && (
				<aside>
					Updated on <time itemprop="dateModified" class="dt-updated" datetime={updatedAt.toISOString()}>{formatter.format(updatedAt)}</time>
				</aside>
			)}
		</div>
	</header>
</div>
