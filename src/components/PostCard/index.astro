---
import { Picture } from 'astro:assets';

import { BLOG_TAGS } from '../../constants';

import TagList from '../TagList/index.astro';

import './styles.css';

interface Props {
	url: string,
	title: string,
	createdAt: Date | string,
	image?: ImageMetadata,
	imageAlt?: string,
	tags?: string[]
}

const { url, title, createdAt, image, imageAlt, tags } = Astro.props;

// eslint-disable-next-line @typescript-eslint/no-magic-numbers
const IMAGE_WIDTHS = [256, 512, 768, image?.width ?? 1024];
const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });
---
<article class="post-card">
	{image && (
		<Picture
			src={image}
			alt={imageAlt ?? ''}
			widths={IMAGE_WIDTHS}
			sizes={`(max-width: 360px) 256px, (max-width: 720px) 512px, (max-width: 1280px) 768px, ${image.width}px`}
			quality="high"
		/>
	)}

	<header>
		<h2>
			<a href={url}>
				<slot name="title"></slot>
			</a>
		</h2>

		<span><time datetime={new Date(createdAt).toISOString()}>{formatter.format(new Date(createdAt))}</time></span>
	</header>

	<div class="post-card-content">
		<slot></slot>
	</div>

	<a class="read-more-link" href={url}><span class="visually-hidden">({title}) </span>Read more...</a>

	<footer>
		{tags && tags.length > 0 && (
			<TagList
				tags={Object.fromEntries(tags.map((tag) => [tag, `${BLOG_TAGS.url}/${tag}`]))}
				isOpen={false}
			/>
		)}
	</footer>
</article>
