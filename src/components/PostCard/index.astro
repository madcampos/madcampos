---
import { Picture } from 'astro:assets';

import { BLOG_TAGS } from '../../constants.js';
import { join } from '../../utils/path.js';

import TagList from '../TagList/index.astro';

import './styles.css';

interface Props {
	url: string;
	title: string;
	createdAt: Date | string;
	image?: ImageMetadata;
	imageAlt?: string;
	tags?: string[];
}

const { url, title, createdAt, image, imageAlt, tags } = Astro.props;

// eslint-disable-next-line @typescript-eslint/no-magic-numbers
const IMAGE_WIDTHS = [256, 512, 768, 1024];
const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });
---
<article class="post-card">
	<header>
		<h2>
			<a href={url}>
				<slot name="title"></slot>
			</a>
		</h2>

		<span><time datetime={new Date(createdAt).toISOString()}>{formatter.format(new Date(createdAt))}</time></span>
	</header>

	{
		image && (
			<Picture
				src={image}
				alt={imageAlt ?? ''}
				widths={IMAGE_WIDTHS}
				sizes="(max-width: 360px) 256px, (max-width: 720px) 512px, (max-width: 1280px) 768px, 1024px"
				quality="high"
				width={512}
			/>
		)
	}

	<div class="post-card-content">
		<slot></slot>
	</div>

	<a class="read-more-link" href={url}>Read more<span class="visually-hidden"> about "{title}"</span>...</a>

	<footer>
		{
			tags && tags.length > 0 && (
				<TagList
					tags={Object.fromEntries(tags.map((tag) => [tag, join([BLOG_TAGS.url, tag])]))}
					isOpen={false}
				/>
			)
		}
	</footer>
</article>
