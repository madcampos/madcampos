---
import { Icon } from 'astro-icon/components';
import { Image } from 'astro:assets';

import './styles.css';

interface Props {
	url?: string;
	event?: string;
	isOnline?: boolean;
	address?: string;
	date?: Date;

	image?: ImageMetadata;
	imageAlt?: string;
}

const { url, event, isOnline, address, date, image, imageAlt } = Astro.props;

// eslint-disable-next-line @typescript-eslint/no-magic-numbers
const IMAGE_WIDTHS = [128, 256, 512, 768, image?.width ?? 1024];
const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });
---
<article class="talk-card" itemscope itemtype="https://schema.org/Event">
	{
		image && (
			<picture
				class="project-icon"
				itemprop="image"
				itemscope
				itemtype="https://schema.org/ImageObject"
			>
				<Image
					itemprop="contentUrl"
					src={image}
					alt={imageAlt ?? ''}
					loading="lazy"
					widths={IMAGE_WIDTHS}
					sizes={`(max-width: 360px) 128px, (max-width: 720px) 256px, (max-width: 1280px) 512px, (max-width: 2160px) 768px ${image.width}px`}
					quality={75}
				/>
			</picture>
		)
	}

	<header>
		<a href={url}>
			<h2 itemprop="name">
				<slot name="title"></slot>
			</h2>
		</a>

		<meta itemprop="eventAttendanceMode" content={isOnline ? 'https://schema.org/OnlineEventAttendanceMode' : 'https://schema.org/OfflineEventAttendanceMode'} />
		<meta itemprop="eventStatus" content="https://schema.org/EventScheduled" />
		<div itemprop="location" itemscope itemtype={isOnline ? 'https://schema.org/VirtualLocation' : 'https://schema.org/Place'} hidden>
			<meta itemprop={isOnline ? 'url' : 'address'} content={isOnline ? url : address} />
		</div>
		<aside>
			{
				date && (
					<small>
						<Icon name="uil:calendar-alt" title="Event Date" />
						<meta itemprop="startDate" content={date ? date.toISOString() : '0000-01-01T00:00:00.000Z'} />
						{date ? <time datetime={date.toISOString()}>{formatter.format(date)}</time> : <span>&mdash;</span>}
					</small>
				)
			}
			{
				event && (
					<small itemprop="superEvent">
						<meta itemprop="startDate" content={date ? date.toISOString() : '0000-01-01T00:00:00.000Z'} />
						<meta
							itemprop="eventAttendanceMode"
							content={isOnline ? 'https://schema.org/OnlineEventAttendanceMode' : 'https://schema.org/OfflineEventAttendanceMode'}
						/>
						<meta itemprop="eventStatus" content="https://schema.org/EventScheduled" />
						<div itemprop="location" itemscope itemtype={isOnline ? 'https://schema.org/VirtualLocation' : 'https://schema.org/Place'} hidden>
							<meta itemprop={isOnline ? 'url' : 'address'} content={isOnline ? url : address} />
						</div>

						<Icon name="uil:presentation-play" title="Event name" />
						<span>{event}</span>
					</small>
				)
			}
		</aside>
	</header>

	<div class="talk-content" itemprop="description">
		<slot></slot>
	</div>
	<div id="talk-links">
		{
			url && (
				<a href={url} itemprop="url">
					<Icon name="uil:presentation-plus" title="" />
					View Talk Info
				</a>
			)
		}
	</div>
</article>
