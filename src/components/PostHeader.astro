---
import type { ImageProps } from '../content/config.ts';

import { Image } from 'astro:assets';

import logoMini from '../assets/images/logo-blog-mini.svg';
import logoMicro from '../assets/images/logo-blog-micro.svg';

interface Props {
	title: string,
	createdAt: Date,
	updatedAt?: Date,
	image?: ImageProps,
	imageAlt?: string
}

const { title, createdAt, updatedAt, image, imageAlt } = Astro.props;

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long' });

const logoDescription = 'Blog logo consisting of stylized "{m}" with a subtext of "--blog"';
const linkTitle = 'Back to blog';
const blogUrl = new URL('/blog', Astro.site).toString();
---
<div id="post-header">
	<nav id="back-to-blog">
		<a id="link-small" href={blogUrl} title={linkTitle}>
			<img
				src={logoMini.src}
				width={logoMini.width}
				height={logoMini.height}
				alt={logoDescription}
			/>
		</a>
		<a id="link-big" href={blogUrl} title={linkTitle}>
			<img
				src={logoMicro.src}
				width={logoMicro.width}
				height={logoMicro.height}
				alt={logoDescription}
			/>
		</a>
	</nav>
	<header>
		{image && (
			<Image
				id="hero-image"
				src={image}
				alt={imageAlt ?? ''}
				itemprop="image"
				loading="eager"
			/>
		)}

		<h1>{title}</h1>
		<aside>Published on <time itemprop="dateCreated" datetime={createdAt.toISOString()}>{formatter.format(createdAt)}</time></aside>
		{ updatedAt && <aside>Updated on <time itemprop="dateModified" datetime={updatedAt.toISOString()}>{formatter.format(updatedAt)}</time></aside> }
	</header>
</div>
