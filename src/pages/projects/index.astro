---
import InternalPage from '../../layouts/InternalPage.astro';
import { listAllProjects } from '../../utils/projects';

import '../../assets/css/projects.css';
import { Picture } from 'astro:assets';

const projects = await listAllProjects();

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long' });
---

<InternalPage
	title="Projects"
	description="A list of all my projects"
	url={`${Astro.site?.toString()}projects`}
>
	{ projects.map(async (project) => {
		const { Content } = await project.render();

		return (
			<article class="project">
				<header>
					<h2>{project.data.title}</h2>
				</header>
				<div class="project-content">
					{project.data.image && (
						<Picture
							class="project-image"
							src={project.data.image}
							alt={project.data.imageAlt ?? project.data.title}
						/>
					)}
					<Content />
				</div>
				<footer>
					<details class="project-info">
						<summary><span class="icon">üîç</span> More info</summary>
						<h3><span class="icon">‚ÑπÔ∏è</span> Project info</h3>
						<ul>
							<li>
								<strong>Started in:</strong>
								<time datetime={project.data.createdAt.toISOString()}>{formatter.format(project.data.createdAt)}</time>
							</li>

							{project.data.version && (
								<li>
									<strong>Current version:</strong>
									{project.data.version}
								</li>
							)}

							{project.data.updatedAt && (
								<li>
									<strong>Last updated:</strong>
									<time datetime={project.data.updatedAt.toISOString()}>{formatter.format(project.data.updatedAt)}</time>
								</li>
							)}

							<li>
								<strong>Current status:</strong>
								<span class:list={`tag status-${project.data.status}`}>{project.data.status}</span>
							</li>

							{project.data.repository && (
								<li>
									<strong>Repository:</strong>
									<a href={project.data.repository} rel="noopener noreferrer">{project.data.repository}</a>
								</li>
							)}
						</ul>

						<h3><span class="icon">üõ†Ô∏è</span> Technologies used</h3>
						<ul class="technology-tags">
							{project.data.techStack?.map((tech) => (
								<li class="tag">{tech}</li>
							))}
						</ul>
					</details>

					{project.data.url && (
						<a
							href={project.data.url}
							rel="noopener noreferrer"
							class="view-project"
						>
							View Project
						</a>
					)}
				</footer>
			</article>
		);
	}) }
</InternalPage>
