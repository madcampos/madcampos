---
import type { GetStaticPaths, InferGetStaticPropsType, PaginateFunction } from 'astro';

import { BLOG_LOGO_ALT, BLOG_TAGS_URL, BLOG_URL } from '../../../../constants';

import BlogPostsLayout from '../../../../layouts/BlogPosts.astro';

import { listPostPagesByTag, MAX_POSTS_PER_PAGE } from '../../../../utils/post';
import logoBlog from '../../../../assets/images/logo-blog.svg';

// eslint-disable-next-line @typescript-eslint/no-use-before-define
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async ({ paginate }: { paginate: PaginateFunction }) => {
	const postsList = await listPostPagesByTag();

	return Object.entries(postsList).flatMap(([tagKey, taggedPostsList]) => paginate(taggedPostsList, {
		params: { tag: tagKey },
		pageSize: MAX_POSTS_PER_PAGE
	}));
}) satisfies GetStaticPaths;

const {
	data: posts,
	url,
	currentPage, lastPage,
	start, end, total, size
} = Astro.props.page;
const { tag } = Astro.params;
---
<BlogPostsLayout
	posts={posts}
	title={`Posts tagged with: "${tag ?? ''}"`}
	currentUrl={url.current}
	currentPage={currentPage}
	lastPage={lastPage}
	prevUrl={url.prev}
	nextUrl={url.next}
	baseUrl={`${BLOG_TAGS_URL}/${tag ?? ''}`}
	start={start}
	end={end}
	total={total}
	size={size}
>
	<a href={BLOG_URL} slot="logo">
		<img
			src={logoBlog.src}
			width={logoBlog.width}
			height={logoBlog.height}
			alt={BLOG_LOGO_ALT}
		/>
	</a>
	<Fragment slot="header">
		{`Posts tagged with: "${tag ?? ''}"`}
	</Fragment>
</BlogPostsLayout>
