---
import type { GetStaticPaths, InferGetStaticPropsType, PaginateFunction } from 'astro';

import { BLOG, BLOG_TAGS } from '../../../../constants';
import { join } from '../../../../utils/path.ts';

import BlogPostsLayout from '../../../../layouts/BlogPosts.astro';

import logoBlog from '../../../../assets/images/logo/logo-blog.svg';
import { listPostPagesByTag, MAX_POSTS_PER_PAGE } from '../../../../utils/post';

// eslint-disable-next-line @typescript-eslint/no-use-before-define
type Props = InferGetStaticPropsType<typeof getStaticPaths>;

export const getStaticPaths = (async ({ paginate }: { paginate: PaginateFunction }) => {
	const postsList = await listPostPagesByTag();

	return Object.entries(postsList).flatMap(([tagKey, taggedPostsList]) =>
		paginate(taggedPostsList, {
			params: { tag: tagKey },
			pageSize: MAX_POSTS_PER_PAGE
		})
	);
}) satisfies GetStaticPaths;

const {
	data: posts,
	url,
	currentPage,
	lastPage,
	start,
	end,
	total,
	size
} = Astro.props.page;
const { tag } = Astro.params;
---
<BlogPostsLayout
	{posts}
	title={`Posts tagged with: "${tag ?? ''}"`}
	currentUrl={url.current}
	{currentPage}
	{lastPage}
	prevUrl={url.prev}
	nextUrl={url.next}
	baseUrl={join([BLOG_TAGS.url, tag ?? ''])}
	{start}
	{end}
	{total}
	{size}
>
	<a href={BLOG.url} slot="logo">
		<img
			src={logoBlog.src}
			width={logoBlog.width}
			height={logoBlog.height}
			alt={BLOG.logoAltText?.regular}
		/>
	</a>
	<Fragment slot="header">
		{`Posts tagged with: "${tag ?? ''}"`}
	</Fragment>
</BlogPostsLayout>
