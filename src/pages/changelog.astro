---
import Logo from '../components/Logo/index.astro';
import { GLOBALS } from '../constants';
import InternalPageLayout from '../layouts/InternalPage.astro';
import { listAllChangelogs } from '../utils/changelog.ts';
import { escapeHtmlTags, inlineMarkdownRender } from '../utils/markdown.ts';

import '../assets/css/pages/changelogs.css';

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });
const changelogs = await Promise.all(await listAllChangelogs());
const renderedChangelogs = await Promise.all(changelogs.map(async (changelog) => {
	const { Content } = await changelog.render();

	return {
		Content,
		title: changelog.title,
		date: changelog.data.date,
		draft: changelog.data.draft
	};
}));
---

<InternalPageLayout
	htmlTitle={['Changelog', ...GLOBALS.title]}
	title="Changelog"
	description="List of changes in diferent versions of the website."
	url="/changelog/"
	tags={['changelog', ...GLOBALS.tags]}
>
	<Logo
		subtitle="Changelog"
		shortSubtitle="Log"
		url="/changelog/"
		urlTitle="Changelog page"
		slot="logo"
	/>
	<Fragment slot="header">Changelog</Fragment>

	{
		renderedChangelogs.map(({ date, title, draft, Content }) => (
			<details>
				<summary>
					<header>
						<h2>
							{draft && <span class="changelog-draft-tag">Draft</span>} <Fragment slot="title" set:html={inlineMarkdownRender(escapeHtmlTags(title))} />
						</h2>
						<p><time datetime={date.toISOString()}>{formatter.format(date)}</time></p>
					</header>
				</summary>
				<article>
					<Content />
				</article>
			</details>
		))
	}
</InternalPageLayout>
