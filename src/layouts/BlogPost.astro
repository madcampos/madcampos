---
import type { ImageProps } from '../content/config.ts';

import { BLOG_TAGS_URL, BLOG_URL } from '../constants';

import '../assets/css/pages/blog-post.css';
import '../assets/css/code.css';

import BaseLayout from './Base.astro';
import PostHeader from '../components/PostHeader/index.astro';

interface Props {
	title: string,
	summary: string,
	image?: ImageProps,
	imageAlt?: string,
	createdAt: Date,
	updatedAt?: Date,
	updates?: { date: Date, changes: string }[],
	tags?: string[],
	url: string
}

const { title, summary, image, imageAlt, createdAt, updatedAt, updates, url, tags } = Astro.props;
const postUrl = `${BLOG_URL}${url}`;
---
<BaseLayout
	htmlTitle={[title, 'Blog', 'Marco Campos']}
	title={title}
	description={summary}
	tags={tags}
	url={postUrl}
	image={image?.src}
	imageAlt={imageAlt}
	createdAt={createdAt}
	updatedAt={updatedAt}
	pageSchema="BlogPosting"
	hasFeed={true}
>
	<PostHeader
		slot="header"
		url={postUrl}
		title={title}
		summary={summary}
		image={image}
		imageAlt={imageAlt}
		createdAt={createdAt}
		updatedAt={updatedAt}
		hasUpdates={updates && updates.length > 0}
	/>

	<article id="post-contents" itemprop="articleBody" class="e-content">
		<slot></slot>
	</article>

	<hr/>

	<footer slot="footer">
		<aside id="post-license">
			<p><small><em>Unless otherwise noted, all content on this site is licensed under a <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/" class="u-license">Creative Commons Attribution-NonCommercial-ShareAlike 4.0 International License</a>.</em></small></p>
		</aside>

		{tags && (
			<aside id="post-tags">
				<details open>
					<summary>Tags</summary>
					<ul>
						{tags.map((tag) => (
							<li class="p-category"><a href={`${BLOG_TAGS_URL}/${tag}`} class="tag">{tag}</a></li>
						))}
					</ul>
				</details>
			</aside>
		)}

		{updates && (
			<aside id="update-history">
				<details open>
					<summary>Update History</summary>
					<ul>
						{updates.map((update) => (
							<li>
								<time
									datetime={new Date(update.date).toISOString()}
									title={new Date(update.date).toISOString()}
								>
									{new Date(update.date).toLocaleDateString()}
								</time>
								<span>&mdash;</span>
								<span>{update.changes}</span>
							</li>
						))}
					</ul>
				</details>
			</aside>
		)}
		<!-- <aside>
			<details>
				<summary>This post in other platforms</summary>
				<ul>
					<li>
						<a class="u-syndication u-as-downstream-duplicate u-alternate" rel="syndication" href="">...</a>
					</li>
				</ul>
			</details>
		</aside> -->
		<!-- <aside>
			<details>
				<summary>Comments and mentions</summary>
			</details>
		</aside> -->
	</footer>
</BaseLayout>
