---
import '../assets/css/base.css';
import '../assets/css/projects.css';

import HtmlHead from '../components/HtmlHead.astro';
import PageHeader from '../components/PageHeader.astro';

interface Props {
	title: string,
	description: string,
	url: string,

	image?: string,
	imageAlt?: string,

	event?: string,
	eventUrl?: string,
	date: Date,

	slides?: string,
	video?: string,
	code?: string,
	demo?: string,

	relatedContent?: {
		title: string,
		url: string
	}[],

	techStack?: string[]
}

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long' });
const { title, description, url, event, eventUrl, date, slides, video, code, demo, relatedContent, techStack, image, imageAlt } = Astro.props;
---
<!DOCTYPE html>
<html lang="en-US" itemscope itemtype="https://schema.org/WebPage">
	<HtmlHead
		title={`${title} | Talk | Marco Campos`}
		description={description}
		url={url}
		tags={['Senior web developer', 'web developer', 'vue.js', 'vue', 'node.js', 'javascript', 'typescript', 'webdev']}
		image={image}
		imageAlt={imageAlt}
		createdAt={date}
	/>
	<body>
		<PageHeader title={title} />

		<main class="project">
			<slot></slot>

			<h2><span class="icon">ℹ️</span> Talk info</h2>
			<ul>
				<li>
					<strong>Event:</strong>
					{eventUrl ? (<a href={eventUrl} rel="noopener noreferrer">{event}</a>) : event}
				</li>

				<li>
					<strong>Date:</strong>
					<time datetime={date.toISOString()}>{formatter.format(date)}</time>
				</li>

				{slides && (
					<li>
						<strong>Slides:</strong>
						<a href={slides} rel="noopener noreferrer">{slides}</a>
					</li>
				)}

				{video && (
					<li>
						<strong>Video:</strong>
						<a href={video} rel="noopener noreferrer">{video}</a>
					</li>
				)}

				{code && (
					<li>
						<strong>Code:</strong>
						<a href={code} rel="noopener noreferrer">{code}</a>
					</li>
				)}
			</ul>

			{relatedContent && (
				<>
					<h2><span class="icon">📚</span> Related content</h2>
					<ul class="related-content">
						{relatedContent?.map(({ url: contentUrl, title: contentTitle }) => (
							<li>
								<a href={contentUrl} rel="noopener noreferrer">{contentTitle}</a>
							</li>
						))}
					</ul>
				</>
			)}

			<h2><span class="icon">🛠️</span> Technologies used</h2>
			<ul class="technology-tags">
				{techStack?.map((tech) => (
					<li class="tag">{tech}</li>
				))}
			</ul>

			{demo && (
				<>
					<h2><span class="icon">🖥️</span>Demo</h2>

					<iframe src={demo} loading="lazy" referrerpolicy="no-referrer" sandbox="allow-forms allow-scripts allow-same-origin" title={`Demo for ${title}`}>
						A local running demo of the project.
					</iframe>
				</>
			)}
		</main>
	</body>
</html>
