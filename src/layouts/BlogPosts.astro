---
import '../assets/css/pages/blog.css';
import blogSocialImage from '../assets/images/social/social-blog.png';
import Card from '../components/Card/Card.astro';
import CardImage from '../components/CardImage/CardImage.astro';
import OldButtons from '../components/OldStyleButtons/OldStyleButtons.astro';
import PageHeader from '../components/PageHeader/PageHeader.astro';
import Pagination from '../components/Pagination/Pagination.astro';
import SkipToContent from '../components/SkipToContent/SkipToContent.astro';
import TagList from '../components/TagList/TagList.astro';
import Webrings from '../components/Webrings/Webrings.astro';
import { BLOG, BLOG_TAGS } from '../constants.js';
import { inlineMarkdownRender, inlineMarkdownStrip } from '../utils/markdown.js';
import { join } from '../utils/path.js';
import type { Post } from '../utils/post';
import BaseLayout from './Base.astro';

interface Props {
	posts: Post[];
	title?: string;
	baseUrl: string;
	currentUrl: string;
	currentPage: number;
	lastPage: number;
	prevUrl?: string;
	nextUrl?: string;
	start: number;
	end: number;
	total: number;
	size: number;
}

const {
	title = '',
	posts,
	baseUrl,
	currentUrl,
	currentPage,
	lastPage,
	prevUrl,
	nextUrl,
	start,
	end,
	total,
	size
} = Astro.props;

const formatter = new Intl.DateTimeFormat('en-US', { dateStyle: 'long', timeStyle: 'short' });
---
<BaseLayout
	htmlTitle={[title, ...BLOG.title].filter(Boolean)}
	title={title ?? BLOG.titleString ?? ''}
	description={BLOG.description}
	tags={BLOG.tags}
	url={currentUrl}
	hasFeed={true}
	image={blogSocialImage.src}
	imageAlt="The letter &quot;m&quot; on a monospaced font, in blue, between curly braces.Below it, a subtext of &quot;Blog&quot; in orange on the lower right corner."
	pageSchema="Blog"
>
	<SkipToContent
		slot="header"
		target="posts-list"
	/>
	<PageHeader slot="header">
		<slot name="logo" slot="logo"></slot>
		<slot name="header"></slot>
	</PageHeader>

	<div id="posts-list">
		{
			posts.map((post) => (
				<Card
					url={join([BLOG.url, post.url])}
					itemtype="https://schema.org/BlogPosting"
					draft={post.data.draft}
				>
					{
						post.data.image && (
							<CardImage
								slot="image"
								image={post.data.image}
								imageAlt={post.data.imageAlt ?? ''}
							/>
						)
					}

					<h2 slot="title">
						<Fragment set:html={inlineMarkdownRender(post.data.title)} />
					</h2>
					<small slot="subtitle" class="post-time">
						<time datetime={post.data.createdAt.toISOString()}>{formatter.format(post.data.createdAt)}</time>
					</small>

					<Fragment set:html={inlineMarkdownRender(post.data.summary)} />

					<a slot="links" class="read-more-link" href={join([BLOG.url, post.url])}>
						<span>Read more</span>
						<span class="visually-hidden">about "{inlineMarkdownStrip(post.data.title)}"</span>
						<span>...</span>
					</a>
					{
						post.data.tags && post.data.tags.length > 0 && (
							<TagList
								slot="footer"
								tags={Object.fromEntries(post.data.tags.map((tag) => [tag, join([BLOG_TAGS.url, tag])]))}
								isOpen={false}
							/>
						)
					}
				</Card>
			))
		}
	</div>

	<Pagination
		slot="footer"
		{baseUrl}
		{currentPage}
		{lastPage}
		{prevUrl}
		{nextUrl}
		{start}
		{end}
		{total}
		{size}
	/>

	<OldButtons slot="footer" />
	<Webrings slot="footer" />
</BaseLayout>
